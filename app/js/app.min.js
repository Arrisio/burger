// Hamburger menu
const menuBtn = document.querySelector('.hamburger-menu-link'),
	hamMenu = document.getElementById('hamburger-menu'),
	hamList = document.getElementById('nav__list_hamburger'),
	body = document.querySelector('body');
hamListItems = document.querySelectorAll('.nav_hamburger .nav__item');


function аsleep(ms) {
	return new Promise(resolve => setTimeout(resolve, ms));
}

async function toggleMenu() {
	menuBtn.classList.toggle('is-active');
	hamMenu.classList.toggle('is-active');
	body.classList.toggle('is-locked');

	for (let hamListItem of hamListItems) {
		hamListItem.classList.toggle('is-active');
		await аsleep(100);

	};
};

menuBtn.addEventListener('click', e => {
	e.preventDefault();
	toggleMenu();
});
hamList.addEventListener('click', e => {
	let el = e.target;
	if (el.tagName == 'A') {
		toggleMenu();
	};
});


// Modal
modal = document.getElementById('modal');

function openModal(name = '', text = '', event = false) {
	(event ? event.preventDefault() : void(0)); // Если модалка открыта не по клику из из AJAX
	modal.classList.add('is-active');
	modal.querySelector('#modal__name').textContent = name;
	modal.querySelector('#modal__text').textContent = text;
	body.classList.add('is-locked');
}
$('.reviews__item .btn').on('click', (e) => {
	openModal(
		name = $(e.target).siblings(".reviews__title").text(),
		text = $(e.target).siblings(".reviews__text").text(),
		event = e
	);
});

// Закрытие Окна
$('.modal').on('click', (e) => {
	if (e.target == modal || e.target == modal.querySelector('.modal__close')) {
		e.preventDefault();
		modal.classList.remove('is-active');
		body.classList.remove('is-locked');
	}
})

//Закрытие модалки или меню на Esc
document.addEventListener("keydown", e => {
	if (e.keyCode == 27) { // закрываем габмургер меню
		if (hamMenu.classList.contains('is-active')) {
			toggleMenu();
		}

		if (modal.classList.contains('is-active')) { // закрываем модалку
			modal.classList.remove('is-active');
			body.classList.remove('is-locked');
		}
	}

});



// all Accordions
allAccordions = document.getElementsByClassName('accordion');

// Ищем ближайшего родителя переданного e.target ,
// у которого радитель - accordion
function findParentAccordItem(elt) {
	let i = 0; // защита от зациклавания
	while (
		!(elt.parentElement.classList.contains('accordion')) &&
		i < 100
	) {
		elt = elt.parentElement;
	}
	return elt;
}

for (let accordList of allAccordions) {
	accordList.addEventListener('click', e => {
		e.preventDefault();
		clickedAccordItem = findParentAccordItem(e.target);
		clickedAccordMenuItems = clickedAccordItem.parentElement.getElementsByTagName("LI");

		for (let accordItem of clickedAccordMenuItems) {
			if (accordItem == clickedAccordItem) {
				accordItem.classList.toggle('is-active');
			} else {
				accordItem.classList.remove('is-active');
			}
		}
	})
};


// Слайдер с Бургерами
slider = new Siema({
	selector: '.burgers__list',
	duration: 200,
	easing: 'ease-out',
	perPage: 1,
	startIndex: 0,
	draggable: true,
	multipleDrag: true,
	threshold: 20,
	loop: true,
	rtl: false,
	// onInit: () => {},
	// onChange: () => {},
});

sliderNextBtn = document.getElementById('burgers_slider-control--next');
sliderNextBtn.addEventListener('click', (e) => {
	e.preventDefault();
	slider.next()
});

sliderPrevBtn = document.getElementById('burgers_slider-control--prev');
sliderPrevBtn.addEventListener('click', (e) => {
	e.preventDefault();
	slider.prev()
});


// AJAX and Order Form
const orderForm = document.getElementById('order-form');


orderForm.addEventListener('submit', e => {
	e.preventDefault();
	const formData = new FormData(),
		URL = "https://webdev-api.loftschool.com/sendmail",
		xhr = new XMLHttpRequest();

	xhr.resposeType = 'json';
	xhr.open("POST", URL);
	xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");

	formData.append('name', orderForm.elements.customerName.value);
	formData.append('phone', orderForm.elements.phone.value);
	formData.append('comment', orderForm.elements.comment.value);
	formData.append('to', 'someemail@mail.ru');

	xhr.send(formData);
	xhr.onload = function () {
		let orderResponse = JSON.parse(xhr.responseText);
		if (orderResponse.status === 1 && xhr.status < 400) { //status 0 fail send
			openModal(name = 'Сообщение', text = orderResponse.message);; //status 1 success send
			orderForm.reset();
		} else {
			openModal(name = 'Ошибка', text = orderResponse.message);
		};
	}
});

// Burgers - скрыть.показать ингредиенты
// let ingredientsVisibility = () => {
$(".ingredients").on({
	// click: e => {
	// 	e.preventDefault();
	// 	$(e.currentTarget).toggleClass('is-active');
	// },
	mouseenter: e => {
		$(e.currentTarget).toggleClass('is-active');
	},
	mouseleave: e => {
		$(e.currentTarget).removeClass('is-active');
	}
})

// };
// Скопипащено с официальной документации
// if (false) {

ymaps.ready(function () {
	var myMap = new ymaps.Map('map', {
			center: [59.93, 30.33],
			zoom: 12
		}, {
			searchControlProvider: 'yandex#search'
		}),
		clusterer = new ymaps.Clusterer({
			// Зададим массив, описывающий иконки кластеров разного размера.
			clusterIcons: [{
					href: './img/contacts/map-marker.png',
					size: [46, 58],
					offset: [-23, -29]
				},
				{
					href: './img/contacts/map-marker.png',
					size: [46, 58],
					offset: [-23, -29]
				}
			],
			// Эта опция отвечает за размеры кластеров.
			// В данном случае для кластеров, содержащих до 100 элементов,
			// будет показываться маленькая иконка. Для остальных - большая.
			clusterNumbers: [8],
			clusterIconContentLayout: null
		}),
		getPointData = function (index) {
			return {
				balloonContentBody: 'тошниловка <strong>№' + index + '</strong>',
				// clusterCaption: 'метка <strong>' + index + '</strong>',
			};
		},
		points = [
			[59.9, 30.3],
			[59.95, 30.43],
			[59.97, 30.35],

		],
		geoObjects = [];

	for (var i = 0, len = points.length; i < len; i++) {
		geoObjects[i] = new ymaps.Placemark(points[i], getPointData(i), {
			iconLayout: 'default#imageWithContent',
			iconImageHref: './img/contacts/map-marker.png',
			iconImageSize: [46, 58],
			iconImageOffset: [-23, -29]
		});
	}

	clusterer.add(geoObjects);
	myMap.geoObjects.add(clusterer);

	myMap.setBounds(clusterer.getBounds(), {
		checkZoomRange: true
	});
});
// }
var initOps = (() => {
	ops = {};
	ops.model = (() => {
		var currentPosition = 0;
		const minPosition = 0,
			maxPosition = $('.section').length - 1;

		moveTo = ((newPosition) => {
			isLastPosition = (newPosition === maxPosition);
			if (newPosition != currentPosition) {
				ops.view.goToSection(newPosition, isLastPosition);
				currentPosition = newPosition;
			}
		})
		moveOn = ((deltaY) => {
			let newPosition = Math.max(
				Math.min((currentPosition + deltaY), maxPosition),
				minPosition
			)
			moveTo(newPosition);
		})

		moveDown = function () {
			currentPosition < maxPosition ? ops.model.moveOn(1) : ops.model.moveTo(0);
		}
		return {
			moveTo,
			moveOn,
			moveDown
		}
	})()

	ops.view = (() => {
		opsContainer = $('.ops__container');
		downButton = $('.down-btn');
		opsSliderItems = $('.ops-slider__item');

		goToSection = ((position, isLastPosition = false) => {
			translatePropery = `translateY(${-position * 100}vh)`;
			opsContainer.css({
				transform: translatePropery
			});
			opsSliderItems.removeClass('is-active');
			opsSliderItems.eq(position).addClass('is-active');
			if (isLastPosition) {
				downButton.css('transform', "rotate(180deg)")
			} else {
				downButton.css('transform', "rotate(0deg)")
			}
		})
		return {
			goToSection
		}
	})();

	ops.controll = (() => {
		$('.ops').on('wheel', e => {
			e.preventDefault();
			ops.model.moveOn(Math.floor(e.originalEvent.deltaY / 100));
		});
		$('.down-btn').on('click', e => {
			e.preventDefault();
			ops.model.moveDown();
		});
		$('.ops-slider li').on('click', function (e) {
			e.preventDefault();
			ops.model.moveTo($(this).index());
		})
		$(document).on({
			'keydown': e => {
				switch (e.keyCode) {
					case 40:
						ops.model.moveOn(1);
						break;
					case 38:
						ops.model.moveOn(-1);
						break;
				}
			}
		})

		$(document).swipe({
			swipe: function (event, direction, distance, duration, fingerCount) {
				console.log(distance, duration);
				if (direction === 'up') {
					ops.model.moveOn(1);
				} else if (direction === 'down') {
					ops.model.moveOn(-1);
				}
			},
			fingers: 'all'
		});

	})()
});


initOps();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
